<!DOCTYPE html>
<html>
    
<head>
    <meta charset="UTF-8">
    <title>GÃ¼rel Lab Result Consultation</title>
    <link rel="stylesheet" type="text/css" href="cssofnewformat.css">
    
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Tangerine&display=swap" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>

    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    
    <link href="https://fonts.googleapis.com/css2?family=Tangerine:wght@700&display=swap" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.7.2/socket.io.js" integrity="sha512-zoJXRvW2gC8Z0Xo3lBbao5+AS3g6YWr5ztKqaicua11xHo+AvE1b0lT9ODgrHTmNUxeCw0Ry4BGRYZfXu70weg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>    


</head>
<body>
    <h1 id="welcomeuser">Welcome  <%= name %></h1>
    <div id="userpage2">

        <div class="topside">
            
        </div>
        <div class="backmainmenu">
            <a id="mainpagereturn">Return to Main Page</a>
            
        </div>
        <button id="LogoutLogout2" name="LogoutLogout2">Logout</button>
        <div class="topdown">
            <ul class="topdownul">
                <button id="profilebut">Edit Your Profile</button>
                <button id="enquiryid">Send an enquiry</button>
                <button id="resultsid">Your results would be here!</button>
            </ul>
        </div>
        <div class="profilephoto">
            
        </div>
        <img id="profilephotoimgid" name="profilephotoimgid" src="<%= imgsourceloadedforprofile  %>" width="350" height="350" onerror="this.style.display='none';"  alt="Profile Image">
        <form action="uploadingphotoroute" name="uploadingphotoname" id="uploadingphotoname" enctype="multipart/form-data" method="POST">
            <div class="uploadinput">
                <label for="uploadphoto"> Choose a photo </label>
                <input type="file" id="uploadphoto" name="myFile">
                <button id="submitbuttonofuploadingphoto" name="submitbuttonofuploadingphoto" onclick="this.onsubmitted()" type="submit">Load your photo</button>
            </div>
        </form>
        <form action="editingprofileroute" name="editingprofilename" id="editingprofilename"  method="POST">
            <div class="editprofile">
                <h3>Edit your name</h3>
                <input type="text" id="nameinput" name="nameinput" placeholder="">
                <h3>Edit your surname</h3>
                <input type="text" id="surnameinput" name="surnameinput" placeholder="">
                <h3>Edit your e-mail</h3>

                <input type="email" id="emailinput" name="emailinput" placeholder="">
                <h3>Edit the day</h3>

                
                <input type="number" id="day2" name="day2" min="1" max="31" value="">
           
                <h3>Edit the month</h3>
                <input type="number" id="month2" name="month2" min="1" max="12" value="">
         
                <h3>Edit the year</h3>
               
                <input type="number" id="year2" name="year2" min="1900" max="2099" value="">

                <h3>Change your password</h3> 
                <input type="password" id="passwordinput" name="passwordinput" placeholder="">
                <h3>Re-Enter password</h3> 
                <input type="password" id="passwordinput2" name="passwordinput2" placeholder="">
                <h3>Your Gender</h3>
                <div class="radiocontainer">
                    <label for="male1  ">Male</label>
                        <input type="radio" id="male1" name="gender" value="male">
                    <br>
                    <hr>
                    <label for="female1">Female</label>
                    <input type="radio" id="female1" name="gender" value="female">

                </div>
                <button id="updatingprofilebutton" name="updatingprofilebutton" type="submit">Update Your Profile!</button>
            </div>
       </form>
       <form action="routeofenquiry" id="formidofrouteofenquiry" name="formidofrouteofenquiry" enctype="multipart/form-data" method="POST">
        <div class="startenquirygui">
            <h1 id="note">Note: In order to take accurately comments and answers to your questions, you have to enter your age, weight, gender etc. </h2>

            <h1 id="h1ofenq">Attention before sending enquiry to doctor!</h1>
            <hr>
            <h2 id="h2ofenq">Before initiating an enquiry, please make sure you mentioned some important informations about your situation. </h2>
            <h2 id="h2ofaenq">Those are your drugs currently you using or used until near past, your age, your weight, maybe other informations that you think might be useful, dietary if you doing and some small brief explanation about your lifestyle.
                Because all of them might effect the comments of doctor.
                
            </h2>
            <br>
            <br>
            <br>     
            <label for="inquiry" id="textoninquiry">Your Inquiry:</label>
            <textarea id="inquiry" name="inquiry" rows="4" cols="50"></textarea>
            <br>
            <div>
                <img src="attachment.png" id="attachmenticon" height="250" width="250">
            </div>
            <label for="sendurenquiry" id="docenqlabel">Choose Lab Result Document Upon Your Enquiry </label>
            <input type="file" id="sendurenquiry" name="myyFile">
            <button id="buttonofstartingenquiry" name="buttonofstartingenquiry" type="submit"> Submit enquiry!</button>

        </div> 
    </form>
        <div class="openenquiry">
           
        </div>
        <div id="yourresultsid" name="yourresultsid" class="yourresults">
            <div id="paragraphforanswerfromdoc" name="paragraphforanswerfromdoc">
                <h1>Dear, <%= indname %>, this is your consultative letter !</h1>
                <% if (answerhere) { %>
                    <p id="replycameid" name="replycameid"><%= answerhere %></p>
                  <% } else { %>
                    <p>There is not submitted any enquiry to doctor!</p>
                  <% } %>   
            </div>
            <h4 id="defofchaticon" name="defofchaticon">For paid customers, you can ask your further questions <br> through this channel in chat interface. </h4>
            <button id="buttonofchaticon" name="buttonofchaticon">
                <img src="chat-icon.png" height="75" width="75">
            </button>
        </div>    
  

    </div>


    <div id="livechattingwithdoc" name="livechattingwithdoc">
        <button id="closebuttonofsendingmessage2" name="closebuttonofsendingmessage2">
            <img src="exitbuttonjpg.jpg" id="idclosebuttonofsendingmessage2" name="idclosebuttonofsendingmessage2" height="40" width="40">
        </button>
        <input type="text" id="messageInputChat" name="messageInputChat" placeholder="Type a message">
        <form action="routeofchatchat" id="idofchatchat" name="idofchatchat" method="GET">
            <ul id="messagesrespondedbyserver"name="messagesrespondedbyserver">

            </ul>



        </form>

        <button id="mybuttonsendingmessage" name="mybuttonsendingmessage" onclick="sendMessageMessage()">
              <img src="sendiconpng.png" id="sendiconformessagingdiv" name="sendiconformessagingdiv" height="75" width="75">
        </button>


    </div> 


    <script>        

const socketv = new WebSocket('wss://virtualbiochemistry.com:443');
const socket = io('https://virtualbiochemistry.com');

const varLogoutLogout2 = document.getElementById("LogoutLogout2");
varLogoutLogout2.addEventListener("click", function(){
    document.cookie = "userLoggedData=;expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";
    history.replaceState(null, null, '/');
    window.location.href = 'newformat.html';
})


socketv.addEventListener('message', function(event) {
                const data = JSON.parse(event.data);
    if (data.type === 'querysent') {
       alert('Your enquiry sent successfully and we will return you within 3 days! For your further questions, you can use the online chat interface that opens after payment. Until then, have a nice day, have a healthy day!');
}});







fetch('https://virtualbiochemistry.com/user/:name/routeofenquiry') // Replace with your actual request URL
  .then(response => {
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    return response.json(); // Assuming the response is JSON
  })
  .then(data => {
    console.log('Request successful with JSON response:', data);
    alert('Your enquiry has been sent successfully!'); // Show success alert
    // Here you can also process the response data as needed
  })
  .catch(error => {
    console.error('Request failed:', error);
    // Optionally, handle errors or show an error alert here
  });
















var variablelivechattingwithdoc = document.getElementById("livechattingwithdoc");

const varbuttonofchaticon = document.getElementById("buttonofchaticon");
varbuttonofchaticon.addEventListener("click", function(){
    if(variablelivechattingwithdoc.style.visibility==="hidden"){

        variablelivechattingwithdoc.style.visibility = "visible";
}else{
    variablelivechattingwithdoc.style.visibility="hidden";
}
})
const varmessagesrespondedbyserver = document.getElementById("messagesrespondedbyserver");



fetch('/user/:name/routeofchatchat').then(response => response.json()).then(data => {
    console.log('Right above of forEach');


    data.forEach(edata=>{
        console.log('Right BELOW of forEAch');
        edata.split('::::');
        
        if(edata.startsWith('D')){
            let originalString = edata;
            let stringToRemove = "D::::";
            let newString = originalString.replace(stringToRemove, "");
            const lis2 = document.createElement("li");
            lis2.textContent = newString;
            lis2.style.textAlign = 'right';
          lis2.style.background = "green";
            lis2.style.fontWeight = "bolder";
            lis2.style.maxWidth = "600px";
            lis2.style.listStyleType = "none";
            lis2.style.wordWrap = "break-word"; 




            varmessagesrespondedbyserver.appendChild(lis2);
  

        }
        if(edata.startsWith('U')){
            let originalString = edata;
            let stringToRemove = "U::::";
            let newString = originalString.replace(stringToRemove, "");
            const lis3 = document.createElement("li");
            lis3.textContent = newString;
            lis3.style.right = '0px'; 
            lis3.style.background = "purple";
            lis3.style.maxWidth = "600px";
            lis3.style.listStyleType = "none";
            lis3.style.fontWeight = "bolder";
            lis3.style.wordWrap = "break-word"; 

            varmessagesrespondedbyserver.appendChild(lis3);


        }
    else{
        console.log('msgs doesnt took');
    }
    
    })
}).catch(error => console.error('Fetch error:', error))




console.log('below of SOCKET');
const nameofuser = "<%= usernamep %>";
console.log("name of user in embedded script side",nameofuser);

let councount2 = 0;
async function sendMessageMessage() {
    const messageInput = document.getElementById('messageInputChat');
    const message = messageInput.value;
    const nameofuser333 = nameofuser;
    councount2 = 1;
    await funcofsendingchatfromuser(nameofuser333,message,councount2);
    socket.emit('chat-message',message)
    socket.emit('chat-message98', message)
    messageInput.value = "";
}
async function funcofsendingchatfromuser(nameofuser2,message2,councount){
    socket.emit('connection',{nameofuser2,message2})
    const nameofuseronchat2 = nameofuser2;
    const messagecontentofchat2 = message2;
    const councount2 = councount;
  
    await fetch('/myfetchapiforchat2/bringthechatofuser', {
        method:'POST',
        headers:{'Content-Type':'application/json',},
        body : JSON.stringify({nameofuseronchat2,messagecontentofchat2, councount2})
    }).then(response=>{response.json()}).catch(error => console.error('Fetch error:', error))
  // councount = 0;
}




socket.on('chat-message', (msg)=>{
    console.log('THIS IS MESSAGE ON CHAT-MSG', msg);
        const lis5 = document.createElement("li");
        lis5.textContent = msg;
          lis5.style.background = "purple";
            lis5.style.fontWeight = "bolder";
            lis5.style.maxWidth = "600px";
            lis5.style.listStyleType = "none";
            lis5.style.wordWrap = "break-word"; 
            varmessagesrespondedbyserver.appendChild(lis5);
    })
    socket.on('chat-message96', (msg)=>{
    console.log('THIS IS MESSAGE ON CHAT-MSG', msg);
        const lis8 = document.createElement("li");
        lis8.textContent = msg;
          lis8.style.background = "green";
            lis8.style.fontWeight = "bolder";
            lis8.style.textAlign = "right";
            lis8.style.maxWidth = "600px";
            lis8.style.listStyleType = "none";
            lis8.style.wordWrap = "break-word"; 
            varmessagesrespondedbyserver.appendChild(lis8);
    })
    socket.on('chat-message2', (message)=>{

        const lis4 = document.createElement("li");
        lis4.textContent = message;
        lis4.style.textAlign = 'right';
          lis4.style.background = "green";
            lis4.style.fontWeight = "bolder";
            lis4.style.maxWidth = "600px";
            lis4.style.listStyleType = "none";
            lis4.style.wordWrap = "break-word"; 




            varmessagesrespondedbyserver.appendChild(lis4);
  
});



var variableclosebuttonofsendingmessage2 = document.getElementById("closebuttonofsendingmessage2");
variableclosebuttonofsendingmessage2.addEventListener("click", function(){
   
    variablelivechattingwithdoc.style.visibility = "hidden";
})



        var buttonedprof = document.getElementById("profilebut");
        var buttonedprof2 = document.getElementById("profilebut");
        var editprofile1 = document.getElementsByClassName("editprofile")[0];
        var computedStyle = window.getComputedStyle(editprofile1);
        var enquirypage = document.getElementsByClassName("startenquirygui")[0];
        var computedStyle2 = window.getComputedStyle(enquirypage);
        var buttonenquirypage = document.getElementById("enquiryid");
        var buttonresults = document.getElementById("resultsid");
        var resultspage1 = document.getElementsByClassName("yourresults")[0];
        var computedStyle3 = window.getComputedStyle(resultspage1);
        buttonresults.addEventListener("click", function(){
            if(computedStyle3.display==="block"){
                resultspage1.style.display="none";
                variablelivechattingwithdoc.style.visibility = "hidden";
            } else{
                resultspage1.style.display="block";
        
                enquirypage.style.display="none";
                editprofile1.style.display = "none";
        
        
            }
        });
        
        buttonedprof.addEventListener("click", function () {
            if (computedStyle.display === "block") {
                editprofile1.style.display = "none";
                variablelivechattingwithdoc.style.visibility = "hidden";
            } else {
                editprofile1.style.display = "block";
                enquirypage.style.display="none";
                resultspage1.style.display="none";
                
                variablelivechattingwithdoc.style.visibility = "hidden";
        
        
            }
        });
        const constofuploading = document.getElementById("uploadphoto");
        const makevisiblephotosendbutton = document.getElementById("submitbuttonofuploadingphoto");
        constofuploading.addEventListener("change", function(event){
            const selectedfile = event.target.files[0];
            if(selectedfile){
                makevisiblephotosendbutton.style.visibility = "visible";
            }
        })
        //___________
    
        const editingpasswordvalidation = document.getElementById("passwordinput");
      const editingpasswordvalidation2 = document.getElementById("passwordinput2");

      function ValidatePassEdit(){
        if(editingpasswordvalidation.value !== editingpasswordvalidation2.value){
            editingpasswordvalidation2.setCustomValidity("Passwords are not matched!");
        }
        else{editingpasswordvalidation2.setCustomValidity("");}
      }
      editingpasswordvalidation.addEventListener("input", ValidatePassEdit);
      editingpasswordvalidation2.addEventListener("input", ValidatePassEdit);
  //______________
  mainpagereturn.addEventListener("click", function(){
        window.location.href = "newformat.html?success=true";
      })

        buttonenquirypage.addEventListener("click", function(){
            if(computedStyle2.display==="block"){
                enquirypage.style.display="none";
                variablelivechattingwithdoc.style.visibility = "hidden";
            } else{
                enquirypage.style.display="block";
                editprofile1.style.display = "none";
                resultspage1.style.display="none";
                variablelivechattingwithdoc.style.visibility = "hidden";
        
        
            }
        });
        formainpagereturn.addEventListener("click", function(){
            foruserpage2.style.visibility="hidden";
            forcontainer.style.visibility="visible";
        });
       

        </script>
        <script src="apijs.js"></script>
       
</body>